server.port=9000

eureka.client.service-url.defaultZone=http://${EUREKA_DOCKER:localhost}:8761/eureka
eureka.instance.preferIpAddress=true
eureka.client.heartbeat-interval=30s # Tiempo entre renovaciones de estado
eureka.client.initial-instance-info-replication-interval=30s  # Intervalo de actualizaciÛn de las instancias
eureka.client.eviction-interval-timer-in-ms=30000   # El intervalo en el que se eliminar·n instancias expiradas

# Instancias aplicaciones
#########################
port.fe = 4200
sportbuddies.fe = http://${EUREKA_DOCKER:localhost}:${port.fe}

# Ruta validacion token
#######################
issuer.uri.validate.token=http://${EUREKA_DOCKER:127.0.0.1}:${server.port}

#-----------------------------------
# Configuracion Motor Base de Datos.
#-----------------------------------
nombre.bbdd=SportBuddies

# Para evitar el problema de PKIX path building failed agregamos -> encrypt=true;trustServerCertificate=true
# Se configurar para poder trabajar con docker o localhost
spring.datasource.url=jdbc:mysql://${BBDD_DOCKER:localhost}/${nombre.bbdd}?serverTimezone=Europe/Madrid&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=XXXX

#-----------------------------
# Driver SQLServer y Dialecto.
#-----------------------------
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Log por consola.
#----------------
logging.level.org.hibernate.SQL=${logging.level:INFO}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


#---------------------
# Variables Aplicacion
#---------------------

pass.public.key = C:/SportBuddies_repository/llave.pem
seguridad.encriptacion = RSA

# Cliente para BE:
##################
redirect.ouaht = http://${EUREKA_DOCKER:127.0.0.1}:8090/login/oauth2/code/client-be
endpoint.authorization.oauth = http://${EUREKA_DOCKER:127.0.0.1}:8090/authorized
endpoint.logout.oauth = http://${EUREKA_DOCKER:127.0.0.1}:8090/logout
client.id.oauth = gateway-app
client.secret.oauth = 12345

# Cliente para Angular:
#######################
redirect.ouaht.angular = http://${EUREKA_DOCKER:localhost}:4200/authorize
client.id.angular = client-angular
client.secret.angular = 12345

# Google Login
##############
spring.security.oauth2.client.registration.google.provider=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:xxxxx}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:xxxx}
spring.security.oauth2.client.registration.google.scope=openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
# Nombre del cliente creado en https://console.cloud.google.com/apis/credentials
spring.security.oauth2.client.registration.google.client-name=oauth-sportbuddies-app-client
spring.security.oauth2.client.provider.google.user-name-attribute=email

# Configuraci√≥n Correo Electr√≥nico
##################################
mail.host=smtp.gmail.com
mail.host.mail.dog = localhost
mail.port=25
mail.port.mail.dog = 1025
mail.username=from_correo
mail.password=from_password
mail.properties.mail.smtp.auth=true
mail.properties.mail.smtp.starttls.enable=true
mail.properties.mail.smtp.starttls.required=true
mail.properties.mail.smtp.connectiontimeout=5000
mail.properties.mail.smtp.timeout=3000
mail.properties.mail.smtp.writetimeout=5000

