#----------------------
# Configuracion logback
#----------------------
logging.config=file:/Users/joseplasenciavillarejo/Desktop/SportBuddies_repository/SportBuddiesApp-Be-Main/dev/config/logback-sport-buddies-main.xml

# Trabajando con Docker
#logging.config=file:/repo-main/logback-sport-buddies-main.xml


# Para trabajar con host escalables
port=8100
server.port=${port:0}

port.gtw = 8090
port.fe = 4200

# Instancias aplicaciones
#########################
sportbuddies.gtw = http://${EUREKA_DOCKER:localhost}:${port.gtw}
sportbuddies.fe = http://${EUREKA_DOCKER:localhost}:${port.fe}

# Comento esta linea por problema de identificacion en EUREKA en su descubrimiento
#eureka.instance.instance-id=${spring.cloud.client.hostname}:${spring.application.name}:${random.value}
eureka.client.service-url.defaultZone=http://${EUREKA_DOCKER:localhost}:8761/eureka
eureka.instance.preferIpAddress=true
eureka.client.heartbeat-interval=30s # Tiempo entre renovaciones de estado
eureka.client.initial-instance-info-replication-interval=30s  # Intervalo de actualización de las instancias
eureka.client.eviction-interval-timer-in-ms=30000   # El intervalo en el que se eliminarán instancias expiradas

#--------
# Swagger
#--------
springdoc.api-docs.path=/api-docs

#-----------------------------------
# Configuracion Motor Base de Datos.
#-----------------------------------
nombre.bbdd=SportBuddies

# Para evitar el problema de PKIX path building failed agregamos -> encrypt=true;trustServerCertificate=true
spring.datasource.url=jdbc:mysql://localhost/${nombre.bbdd}?serverTimezone=Europe/Madrid&allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=XXXXX

#-----------------------------
# Driver SQLServer y Dialecto.
#-----------------------------
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Log por consola.
#----------------
logging.level.org.hibernate.SQL=${logging.level:INFO}
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#---------------------
# Variables Aplicacion
#---------------------
pass.public.key = C:/SportBuddies_repository/llave.pem
paypal.client.id= XXX
paypal.client.secret= XXXX
# Usamos sandbox para el testing y live para producc
paypal.mode= sandbox
paypal.url.token = https://api.sandbox.paypal.com/v1/oauth2/token
paypal.url.estado = https://api.sandbox.paypal.com/v1/payments/sale/

stripe.secret.key = XXXXX
